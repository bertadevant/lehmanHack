
package lh;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LehmanHack", targetNamespace = "http://lh/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LehmanHack {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThreads", targetNamespace = "http://lh/", className = "lh.GetThreads")
    @ResponseWrapper(localName = "getThreadsResponse", targetNamespace = "http://lh/", className = "lh.GetThreadsResponse")
    @Action(input = "http://lh/LehmanHack/getThreadsRequest", output = "http://lh/LehmanHack/getThreadsResponse")
    public String getThreads();

    /**
     * 
     * @param fadsfs
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "operation", targetNamespace = "http://lh/", className = "lh.Operation")
    @ResponseWrapper(localName = "operationResponse", targetNamespace = "http://lh/", className = "lh.OperationResponse")
    @Action(input = "http://lh/LehmanHack/operationRequest", output = "http://lh/LehmanHack/operationResponse")
    public String operation(
        @WebParam(name = "fadsfs", targetNamespace = "")
        String fadsfs);

    /**
     * 
     * @param inputUsername
     * @param inputPassword
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://lh/", className = "lh.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://lh/", className = "lh.LoginResponse")
    @Action(input = "http://lh/LehmanHack/loginRequest", output = "http://lh/LehmanHack/loginResponse")
    public String login(
        @WebParam(name = "inputUsername", targetNamespace = "")
        String inputUsername,
        @WebParam(name = "inputPassword", targetNamespace = "")
        String inputPassword);

    /**
     * 
     * @param usernaname
     * @param passoword
     * @param card
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createUser", targetNamespace = "http://lh/", className = "lh.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://lh/", className = "lh.CreateUserResponse")
    @Action(input = "http://lh/LehmanHack/createUserRequest", output = "http://lh/LehmanHack/createUserResponse")
    public String createUser(
        @WebParam(name = "usernaname", targetNamespace = "")
        String usernaname,
        @WebParam(name = "passoword", targetNamespace = "")
        String passoword,
        @WebParam(name = "card", targetNamespace = "")
        String card);

    /**
     * 
     * @param threadID
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComments", targetNamespace = "http://lh/", className = "lh.GetComments")
    @ResponseWrapper(localName = "getCommentsResponse", targetNamespace = "http://lh/", className = "lh.GetCommentsResponse")
    @Action(input = "http://lh/LehmanHack/getCommentsRequest", output = "http://lh/LehmanHack/getCommentsResponse")
    public String getComments(
        @WebParam(name = "threadID", targetNamespace = "")
        String threadID);

    /**
     * 
     * @param threadID
     * @param inputComment
     * @param inputUsername
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "postComment", targetNamespace = "http://lh/", className = "lh.PostComment")
    @ResponseWrapper(localName = "postCommentResponse", targetNamespace = "http://lh/", className = "lh.PostCommentResponse")
    @Action(input = "http://lh/LehmanHack/postCommentRequest", output = "http://lh/LehmanHack/postCommentResponse")
    public String postComment(
        @WebParam(name = "inputUsername", targetNamespace = "")
        String inputUsername,
        @WebParam(name = "inputComment", targetNamespace = "")
        String inputComment,
        @WebParam(name = "threadID", targetNamespace = "")
        String threadID);

    /**
     * 
     * @param inputThreadId
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getThreadDetails", targetNamespace = "http://lh/", className = "lh.GetThreadDetails")
    @ResponseWrapper(localName = "getThreadDetailsResponse", targetNamespace = "http://lh/", className = "lh.GetThreadDetailsResponse")
    @Action(input = "http://lh/LehmanHack/getThreadDetailsRequest", output = "http://lh/LehmanHack/getThreadDetailsResponse")
    public String getThreadDetails(
        @WebParam(name = "inputThreadId", targetNamespace = "")
        String inputThreadId);

    /**
     * 
     * @param typeVote
     * @param commentorThread
     * @param id
     * @param userid
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updownvote", targetNamespace = "http://lh/", className = "lh.Updownvote")
    @ResponseWrapper(localName = "updownvoteResponse", targetNamespace = "http://lh/", className = "lh.UpdownvoteResponse")
    @Action(input = "http://lh/LehmanHack/updownvoteRequest", output = "http://lh/LehmanHack/updownvoteResponse")
    public String updownvote(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "userid", targetNamespace = "")
        String userid,
        @WebParam(name = "typeVote", targetNamespace = "")
        String typeVote,
        @WebParam(name = "CommentorThread", targetNamespace = "")
        String commentorThread);

}
